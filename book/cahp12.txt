ann, dnn

nn = (bool 함수 + 활성화 함수 + 계단 함수 = Adaline), (),()

cost function
ann, anns = dnn, dnn + col => cnn

프레임워크 vs 라이브러리

use library


function y = WX + b 1943

Perceptron 활성화 함수 (계단 함수)
y= f(WX + b) f() 활성화 함수 0,1 -> Perceptron

Adaline 0.0 ~ 1.0

use 텐서플로우 -----------library
work (in Flask(context)) in anaconda --------flask:framework
keras -----------API


TF: CPU, GPU(CUDA)

Tensorflow는 알고리즘을 구현, 실행, 인터페이스를 가지고 있다. TF has interface

저수준 : 자유도가 높다
고수준 : 자유도가 낮다 -> 개발자가 커스터마이징할 요소가 적다

노드 : 입력과 출력을 갖는 연산 = 함수(그래프 = matrix)
세션 넣어서 실행
즉시 실행 모드(세션을 히든)

텐서는 스칼라, 벡터, 매트릭스등이 일반화 한 것
스칼라 : 랭크 0인 텐서
벡터 : 랭크 1인 텐서
매트릭스 : 랭크 2인 텐서
큐빅 : 랭크 3인 텐서
? : 랭크 4인 텐서
? : 랭크 5인 텐서

선형대수학에서
다중선형사상(multilinear map) 또는 텐서(tensor)는
선형 관게를 나타내는 다중선형수학의 대상이다.

텐서는 기저(basis: n_vector)를 선택하여 다차원 배열로 나타낼 수 있으며,
기저를 바꾸는 변환 법칙이 존재한다. ==variable

a = 0
b = 0.0
c = '0'

랭크는 차원의 단위

variable
variable, const, placeholder

placeholder : 저수준으로 개발할 때, 입력데이터, 하이퍼파라미터 튜닝을 하는 곳
weight D-2

dnn = (bool 함수 + 활성화 함수 (계단 함수)) *n + 손실 함수

손실함수를 안다는 것의 의미는 역전파로 자신의 에러를 알고 있다.

* 우리가 조정할 수 있는 것은 제한적인 수의 활성화 함수와 손실함수

































































































































































































































































































































































































ann, anns = dnn, dnn + col => cnn